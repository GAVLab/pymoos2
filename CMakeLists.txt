CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE "DEBUG")
    #SET(CMAKE_BUILD_TYPE "RELEASE")
    #SET(CMAKE_BUILD_TYPE "RELWITHDEBINFO")
    #SET(CMAKE_BUILD_TYPE "MINSIZEREL")
ENDIF()

FIND_PACKAGE(Boost)
IF(NOT Boost_FOUND)
    MESSAGE(FATAL_ERROR "Unable to find correct Boost version. Did you set BOOST_ROOT?")
ENDIF()

OPTION(USE_PYTHON3 "Whether of not to use Python3" OFF)

IF(USE_PYTHON3)
    list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/config/)
    find_package(Python32Interp REQUIRED)
    find_package(Python32Libs REQUIRED)

    IF(NOT PYTHON3LIBS_FOUND)
        MESSAGE(FATAL_ERROR "Failed to find the python libraries")
    ENDIF()
    set(PYTHON_EXECUTABLE ${PYTHON3_EXECUTABLE})
    set(PYTHON_LIBRARIES ${PYTHON3_LIBRARIES})
    set(PYTHON_INCLUDE_DIRS ${PYTHON3_INCLUDE_DIRS})
ELSE(USE_PYTHON3)
    find_package(PythonInterp REQUIRED)
    ### this was finding python libs for 3.2.3 sooo just set it manually?
    SET(PYTHON_INCLUDE_DIRS "/usr/include/python2.7")

    IF("${CMAKE_SYSTEM_NAME}" MATCHES "Darwin")
        find_package(PythonLibs REQUIRED)
        #SET(PYTHON_LIBRARIES "/usr/lib/Python2.7")
    ELSE("${CMAKE_SYSTEM_NAME}" MATCHES "Darwin") # FIXME - assuming other unix (linux)
        SET(PYTHON_LIBRARIES "/usr/lib/libpython2.7.so")
    ENDIF("${CMAKE_SYSTEM_NAME}" MATCHES "Darwin")

    #IF(NOT PYTHONLIBS_FOUND)
    #    MESSAGE(FATAL_ERROR "Failed to find the python libraries")
    #ENDIF()
ENDIF(USE_PYTHON3)

# determine directory to install python files in
EXECUTE_PROCESS(COMMAND
	${PYTHON_EXECUTABLE} -c "import distutils.sysconfig, sys; sys.stdout.write(distutils.sysconfig.get_python_lib(0,0,\"\"))"
		OUTPUT_VARIABLE PYTHON_INSTALL
		ERROR_VARIABLE PYTHON_STDERR
		RESULT_VARIABLE PYTHON_ERR
		)

SET(PYTHON_INSTDIR ${CMAKE_INSTALL_PREFIX}/${PYTHON_INSTALL}) 
MESSAGE(STATUS "Python files and libraries will be installed in ${PYTHON_INSTDIR}")

set( CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin )
set( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib )
set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib )

set( CMAKE_SHARED_LIBRARY_SUFFIX ".so" )

IF(WIN32)
    ADD_DEFINITIONS(-DWINDOWS_NT -D_CRT_SECURE_NO_DEPRECATE -D_SCL_SECURE_NO_DEPRECATE)
ENDIF(WIN32)
IF(UNIX)
    ADD_DEFINITIONS(-DUNIX)
    IF("${CMAKE_SYSTEM_NAME}" MATCHES "Darwin")
        ADD_DEFINITIONS( -DPLATFORM_DARWIN )
        
        #some support for macport installed libraries
        SET(CMAKE_LIBRARY_PATH ${CMAKE_LIBRARY_PATH} /opt/local/lib)
        SET(CMAKE_INCLUDE_PATH ${CMAKE_INCLUDE_PATH} /opt/local/include)
        MESSAGE(STATUS "Cmake library path ${CMAKE_LIBRARY_PATH}")

        SET( PLATFORM_DARWIN 1 )
    ENDIF("${CMAKE_SYSTEM_NAME}" MATCHES "Darwin")
    IF("${CMAKE_SYSTEM_NAME}" MATCHES "Linux")
        ADD_DEFINITIONS( -DPLATFORM_LINUX )
        SET( PLATFORM_LINUX 1 )
    ENDIF("${CMAKE_SYSTEM_NAME}" MATCHES "Linux")
ENDIF(UNIX)

INCLUDE_DIRECTORIES(
    ${Boost_INCLUDE_DIRS} 
    ${PYTHON_INCLUDE_DIRS}
    "../")

SET(Boost_USE_STATIC_LIBS OFF)
SET(Boost_USE_MULTITHREADED ON)
SET(Boost_USE_STATIC_RUNTIME OFF)

FIND_PACKAGE(Boost COMPONENTS system thread python REQUIRED)

# debugging symbol stuff
link_directories(${Boost_LIBRARY_DIRS})
link_directories(${PYTHON_LIBRARIES})

FIND_PACKAGE(MOOS)
INCLUDE_DIRECTORIES( ${MOOS_INCLUDE_DIRS} )
LINK_DIRECTORIES( ${MOOS_LIBRARY_DIRS} )

ADD_LIBRARY(CMOOSMsg SHARED src/pyMOOSMsg.cpp )
TARGET_LINK_LIBRARIES(CMOOSMsg ${BOOST_PYTHON_LIBRARY} ${Boost_LIBRARIES} ${MOOS_LIBRARIES} ${PYTHON_LIBRARIES})
SET_TARGET_PROPERTIES(CMOOSMsg PROPERTIES PREFIX "") # remove 'lib' prefix

ADD_LIBRARY(XPCTcpSocket SHARED src/pyXPCTcpSocket.cpp)
TARGET_LINK_LIBRARIES(XPCTcpSocket ${BOOST_PYTHON_LIBRARY} ${Boost_LIBRARIES} ${MOOS_LIBRARIES} ${PYTHON_LIBRARIES})
SET_TARGET_PROPERTIES(XPCTcpSocket PROPERTIES PREFIX "")

ADD_LIBRARY(CMOOSCommPkt SHARED src/pyMOOSCommPkt.cpp  ${CMOOSMsg_SRC} )
TARGET_LINK_LIBRARIES(CMOOSCommPkt ${BOOST_PYTHON_LIBRARY} ${Boost_LIBRARIES} ${MOOS_LIBRARIES} ${PYTHON_LIBRARIES})
SET_TARGET_PROPERTIES(CMOOSCommPkt PROPERTIES PREFIX "") 

SET(CMOOSCommObject_SRC   
    src/pyMOOSCommObject.cpp
    src/pyMOOSCommPkt.cpp
    )

ADD_LIBRARY(CMOOSCommObject SHARED ${CMOOSCommObject_SRC} )
TARGET_LINK_LIBRARIES(CMOOSCommObject ${BOOST_PYTHON_LIBRARY} ${Boost_LIBRARIES} ${MOOS_LIBRARIES} ${PYTHON_LIBRARIES})
SET_TARGET_PROPERTIES(CMOOSCommObject PROPERTIES PREFIX "") 

file(COPY pymoos/MOOSCommClient.py DESTINATION ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})

INSTALL(FILES pymoos/MOOSCommClient.py 
		pymoos/__init__.py 
		${CMAKE_BINARY_DIR}/lib/CMOOSCommObject.so 
		${CMAKE_BINARY_DIR}/lib/CMOOSCommPkt.so 
		${CMAKE_BINARY_DIR}/lib/CMOOSMsg.so 
		${CMAKE_BINARY_DIR}/lib/XPCTcpSocket.so
	    DESTINATION ${PYTHON_INSTDIR}/pymoos/
)
